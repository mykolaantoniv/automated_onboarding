name: Create Project Repository

on:
  workflow_dispatch:
    inputs:
      project_name:
        description: 'Name of the new project repository'
        required: true

jobs:
  create_project_repository:
    runs-on: ubuntu-latest
    steps:
      - name: Create Repository from Template
        run: |
          gh repo create "${{ github.event.inputs.project_name }}" --template="${{ vars.TEMPLATE_REPO }}" --private --include-all-branches
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Protect Main Branch
        run: |
          # Get the repository ID of the "cli/cli" repository
          repositoryId="$(gh api graphql -f query='{repository(owner:"cli",name:"cli"){id}}' -q .data.repository.id)"
          
          # Create a branch protection rule
          gh api graphql -f query='
            mutation($repositoryId: ID!, $branch: String!, $requiredReviews: Int!) {
              createBranchProtectionRule(input: {
                repositoryId: $repositoryId
                pattern: $branch
                requiresApprovingReviews: true
                requiredApprovingReviewCount: $requiredReviews
              }) {
                clientMutationId
              }
            }' \
            -f repositoryId="$repositoryId" \
            -f branch="main" \
            -f requiredReviews=3
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
